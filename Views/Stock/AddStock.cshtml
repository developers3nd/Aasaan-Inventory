@model online_store.Models.tblstock

@{
    ViewBag.Title = "AddStock";
}

<script src="~/plugins/jquery/jquery.min.js"></script>

<h2>Add Stock</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.catid, "catid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.catid, ViewBag.CatList as SelectList, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.catid, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.pid, "pid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.pid, ViewBag.ProList as SelectList, "Select Items", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.pid, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.sid, "sid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.sid, ViewBag.SupList as SelectList, "Select Supplier", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.qty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.qty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Stock" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        $("#catid").change(function () {
            $.get("/Stock/GetItemCategory", { catid: $("#catid").val() }, function (data) {

               // $("#pid").empty();
                $.each(data, function (key,val) {
                    $("#pid").append("<option value='"+val.pid+"'>" +val.name+ "</option>");
                })

            });
        })
    })

    $("#qty").keyup(function () {
        var qty = $(this).val();

        var price = $("#price").text();

        var total = parseInt(qty) * parseInt(price);

        $("#total").val(total);

    })
</script>
